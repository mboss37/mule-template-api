# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- develop
- release
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
# Environment dependent variable groups
- name: currentBranch
  value: $(Build.SourceBranchName)
- ${{ if eq(variables['build.SourceBranchName'], 'develop') }}:
  - group: dev.vars.group
- ${{ if eq(variables['build.SourceBranchName'], 'release') }}:
  - group: dev.vars.group
- ${{ if eq(variables['build.SourceBranchName'], 'master') }}:
  - group: dev.vars.group
# muleDeployer variables
- group: muleDeployer
# Cache local Repo variables
- name: MAVEN_CACHE_FOLDER
  value: $(Pipeline.Workspace)/.m2/repository
- name: MAVEN_OPTS
  value: -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)

steps:
- task: CacheBeta@0
  inputs:
    key: $(Build.SourcesDirectory)/pom.xml
    path: $(MAVEN_CACHE_FOLDER)
  displayName: Cache Maven local repo
  
- task: DownloadSecureFile@1
  displayName: Download secure file
  name: settings
  inputs:
    secureFile: 'settings.xml'

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    goals: 'package -s $(settings.secureFilePath) $(MAVEN_OPTS)'