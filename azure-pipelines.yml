# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- develop
- release
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
# Environment dependent variable groups
- name: currentBranch
  value: $(Build.SourceBranchName)
- ${{ if eq(variables['build.SourceBranchName'], 'develop') }}:
  - group: dev.vars.group
- ${{ if eq(variables['build.SourceBranchName'], 'release/*') }}:
  - group: uat.vars.group
- ${{ if eq(variables['build.SourceBranchName'], 'master') }}:
  - group: dev.vars.group
# Cache local Repo variables
- name: MAVEN_CACHE_FOLDER
  value: $(Pipeline.Workspace)/.m2/repository
- name: MAVEN_OPTS
  value: -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)

steps:
- task: CacheBeta@0
  inputs:
    key: 'maven | "$(Agent.OS)" | $(Build.SourcesDirectory)/pom.xml'
    path: $(MAVEN_CACHE_FOLDER)
    cacheHitVar: 'CacheRestored'
    restoreKeys: |
      maven | "$(Agent.OS)"
      maven
  displayName: Cache Maven local repo
  
- task: DownloadSecureFile@1
  displayName: Download secure file
  name: settings
  inputs:
    secureFile: 'settings_mboss.xml'

- task: Maven@3
  displayName: Build and run munit
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    jdkVersionOption: '1.8'
    goals: 'package -s $(settings.secureFilePath)'
    mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
    
- bash: |
    ls target/*.jar
    echo "##vso[task.setvariable variable=jarFilename]`ls target/*.jar`"
    mvn -q -Dexec.executable=echo -Dexec.args='${project.groupId} ${project.artifactId} ${project.version}' --non-recursive exec:exec 2>/dev/null > /tmp/pominfos.txt
    echo "##vso[task.setvariable variable=pomgroupId]`cat /tmp/pominfos.txt | cut -d " " -f 1`"
    echo "##vso[task.setvariable variable=pomartifactId]`cat /tmp/pominfos.txt | cut -d " " -f 2`-$(mule.env)"
    echo "##vso[task.setvariable variable=assetId]`cat /tmp/pominfos.txt | cut -d " " -f 2`" 
    echo "##vso[task.setvariable variable=pomversion]`cat /tmp/pominfos.txt | cut -d " " -f 3`"
  displayName : 'Extract properties of the pom artifact'
 
- script: |
    echo jarFilename: $(jarFilename)
    echo pomgroupId: $(pomgroupId)
    echo pomartifactId: $(pomartifactId)
    echo pomversion: $(pomversion)
  displayName: Show variables  
    
- task: Maven@3
  displayName: Deploy Artifact
  inputs:
    goals: 'deploy'
    options: '-s $(settings.secureFilePath) -Dpackaging=jar -DgroupId=$(pomgroupId) -DartifactId=$(pomartifactId) -Dversion=$(pomversion) -Dfile=$(jarFileName) -DrepositoryId=$(mule.azure.feedId) -Durl=$(mule.azure.feedurl)'
    mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
    jdkVersionOption: '1.8'
    
- task: CopyFiles@2
  displayName: Copy jar file to artifact directory...
  inputs:
    contents: 'target/*.jar'
    CleanTargetFolder: true
    targetFolder: $(Build.ArtifactStagingDirectory)
    flattenFolders: true
   
- task: PublishBuildArtifacts@1
  displayName: Deploy to azure artifact...
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: 'drop'
    publishLocation: 'Container'
   
    